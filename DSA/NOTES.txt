 -----------------------------------------------------------------------------------------------------------------------------------------------
 DATE: 21/08/2024
 -----------------------------------------------------------------------------------------------------------------------------------------------

 DATA STRUCTURE:
    -Data Struture is about how data can be store and use in different Strutures.

ALGORITHEM:
    -Algorithm is a step-by-step procedure for solving a problem.

ASYMPTOTIC NOTATIOIN:
    -Asymptotic notation is used to describe the time and space complexity of an algorithm.

    -There are mainly three type of notation:
        1. Big O notation: It is used to describe the upper bound or wrost case of an algorithm's time or
           space complexity.

        2. Big Ω notation: It is used to describe the lower bound of an algorithm's time or
           space complexity.

        3. Big Θ notation: It is used to describe the exact time or space complexity of an algorithm.


    -There are mainly two types of complexity for any program:
        1. Time complexity: It is the amount of time an algorithm takes to complete as a function of
           the size of the input.
        
        2. Space complexity: It is the amount of memory an algorithm takes to complete as a function of
           the size of the input.
    
        
                                       COMPLEXITY OF PROGRAM

      NOTATIOIN           |        NAME             |              DESCRIPTION
      --------------------|-------------------------|-----------------------------------------------------------------------------------
      O(1)                | Constant                | The time taken by the algorithm is constant and does
                          |                         | not depend on the size of the input.
      --------------------|-------------------------|-----------------------------------------------------------------------------------
      O(log n)            | Logarithmic             | The time taken by the algorithm is proportional
                          |                         | to the logarithm of the size of the input.
      --------------------|-------------------------|-----------------------------------------------------------------------------------
      O(n)                | Linear                  | The time taken by the algorithm is proportional
                          |                         | to the size of the input.
      --------------------|-------------------------|-----------------------------------------------------------------------------------
      O(n log n)          | Linearithmic            | The time taken by the algorithm is
                          |                         | proportional to the product of the size of the input and its logarithm
      --------------------|-------------------------|-----------------------------------------------------------------------------------
      O(n^2)              | Quadratic               | The time taken by the algorithm is proportional
                          |                         | to the square of the size of the input.
      --------------------|-------------------------|-----------------------------------------------------------------------------------
      O(2^n)              | Exponential             | The time taken by the algorithm is proportional
                          |                         | to 2 raised to the power of the size of the input.
      --------------------|-------------------------|-----------------------------------------------------------------------------------
      O(n!)               | Factorial               | The time taken by the algorithm is proportional
                          |                         | to the factorial of the size of the input.
      --------------------|-------------------------|-----------------------------------------------------------------------------------
      
